buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.15'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'org.jetbrains.dokka'

    group = 'me.mrkirby153'
    version = '2.1-SNAPSHOT'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url = "https://oss.sonatype.org/content/groups/public/"
        }
    }

    configurations {
        compile.extendsFrom shadow
    }

    shadowJar {
        classifier = null
        configurations = [project.configurations.shadow]
    }

    task sourceJar(type: Jar, dependsOn: project.classes) {
        classifier 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: project.dokka) {
        from dokka
    }

    publishing {
        tasks.publish.dependsOn build
        repositories {
            maven {
                name = "mrkirby153"
                url = "https://repo.mrkirby153.com/repository/maven-snapshots/"
                credentials {
                    username project.hasProperty('repositoryUsername') ? project.repositoryUsername : System.getenv("REPO_USERNAME")
                    password project.hasProperty('repositoryPassword') ? project.repositoryPassword : System.getenv("REPO_PASS")
                }
            }
        }
        publications {
            jar(MavenPublication) {
                from components.shadow
                artifact tasks.sourceJar {
                    classifier = 'sources'
                }
                artifact tasks.javadocJar {
                    classifier = 'javadoc'
                }
            }
        }
    }

    build.dependsOn shadowJar

    dokka {
        outputFormat = 'javadoc'
        outputDirectory = "$buildDir/javadoc"
    }
}
